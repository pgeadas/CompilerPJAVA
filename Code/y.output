State 137 conflicts: 1 shift/reduce
State 199 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: CLASSSYMB ID '{' class '}'

    2 class: declaration ';' class
    3      | func_list

    4 func_list: func_list func_def
    5          | func_def

    6 statement_list: statement_list statement
    7               | statement

    8 statement: instruction ';'
    9          | compound_statement
   10          | println_statement ';'
   11          | declaration ';'
   12          | func_call ';'
   13          | return_statement ';'
   14          | read_statement ';'
   15          | concat ';'
   16          | break_cont ';'

   17 break_cont: BREAK
   18           | CONTINUE

   19 concat: CONCATSYMB '(' concat_args ')'

   20 concat_args: type ',' concat_args
   21            | type ',' type

   22 read_statement: READ '(' ID ')'
   23               | READLINE '(' ID ')'

   24 instruction: expression
   25            | atribution
   26            | plusminus

   27 plusminus: ID PLUSPLUS
   28          | ID MINUSMINUS

   29 compound_statement: if_statement
   30                   | while_statement
   31                   | for_statement

   32 println_statement: PRINTLN '(' println_args ')'
   33                  | PRINT '(' println_args ')'

   34 println_args: type PLUS println_args
   35             | type

   36 return_statement: RETURNSYMB
   37                 | RETURNSYMB instruction

   38 for_statement: FOR '(' for_args ';' relac_exp ';' for_args ')' cont_statement

   39 for_args: dec_list
   40         | declaration
   41         | plusminus
   42         | /* empty */

   43 if_statement: IF '(' instruction ')' cont_statement elseif_statement_list else_statement

   44 while_statement: WHILE '(' instruction ')' cont_statement

   45 else_statement: ELSE cont_statement
   46               | /* empty */

   47 elseif_statement_list: elseif_statement_list elseif_statement
   48                      | /* empty */

   49 elseif_statement: ELSEIF '(' instruction ')' cont_statement

   50 cont_statement: statement
   51               | '{' statement_list '}'
   52               | '{' '}'
   53               | ';'

   54 func_def: FUNCSYMB symbols ID '(' arg_list ')' cont_func

   55 func_call: ID '(' call_list ')'

   56 call_list: call_list ',' type
   57          | type
   58          | /* empty */

   59 cont_func: '{' statement_list '}'
   60          | '{' '}'

   61 arg_list: arg_list ',' symbols ID
   62         | symbols ID
   63         | /* empty */

   64 symbols: INTSYMB
   65        | DOUBLESYMB
   66        | FLOATSYMB
   67        | STRINGSYMB
   68        | VOIDSYMB
   69        | BOOLSYMB

   70 declaration: INTSYMB dec_list
   71            | DOUBLESYMB dec_list
   72            | FLOATSYMB dec_list
   73            | STRINGSYMB dec_list
   74            | BOOLSYMB dec_list

   75 dec_list: atr
   76         | dec_list ',' atr

   77 atr: ID
   78    | atribution

   79 atribution: atribution_list expression

   80 atribution_list: atribution_list ID EQUAL
   81                | atribution_list ID PLUSEQUAL
   82                | atribution_list ID MINUSEQUAL
   83                | ID EQUAL
   84                | ID MINUSEQUAL
   85                | ID PLUSEQUAL

   86 expression: exp_minus_plus
   87           | '(' expression ')'
   88           | logic_exp_or_and
   89           | relac_exp
   90           | aritmetic_exp
   91           | logic_exp_not
   92           | type

   93 exp_minus_plus: MINUS expression
   94               | PLUS expression

   95 logic_exp_not: NOT expression

   96 logic_exp_or_and: expression AND expression
   97                 | expression OR expression

   98 relac_exp: expression EQUALEQUAL expression
   99          | expression NOTEQUAL expression
  100          | expression GREATEREQUAL expression
  101          | expression LESSEQUAL expression
  102          | expression LESS expression
  103          | expression GREATER expression

  104 aritmetic_exp: expression PLUS expression
  105              | expression MINUS expression
  106              | expression MULT expression
  107              | expression DIV expression
  108              | expression MOD expression
  109              | expression POT expression

  110 type: INT
  111     | FLOAT
  112     | STRING
  113     | ID
  114     | func_call
  115     | BOOL


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19 22 23 32 33 38 43 44 49 54 55 87
')' (41) 19 22 23 32 33 38 43 44 49 54 55 87
',' (44) 20 21 56 61 76
';' (59) 2 8 10 11 12 13 14 15 16 38 53
'{' (123) 1 51 52 59 60
'}' (125) 1 51 52 59 60
error (256)
MINUSEQUAL (258) 82 84
PLUSEQUAL (259) 81 85
EQUAL (260) 80 83
OR (261) 97
AND (262) 96
EQUALEQUAL (263) 98
NOTEQUAL (264) 99
LESSEQUAL (265) 101
GREATEREQUAL (266) 100
LESS (267) 102
GREATER (268) 103
MINUSMINUS (269) 28
PLUSPLUS (270) 27
MINUS (271) 93 105
PLUS (272) 34 94 104
DIV (273) 107
MULT (274) 106
MOD (275) 108
POT (276) 109
RETURNSYMB (277) 36 37
FUNCSYMB (278) 54
ELSEIF (279) 49
ELSE (280) 45
WHILE (281) 44
IF (282) 43
NOT (283) 95
CLASSSYMB (284) 1
INTSYMB (285) 64 70
FLOATSYMB (286) 66 72
STRINGSYMB (287) 67 73
DOUBLESYMB (288) 65 71
VOIDSYMB (289) 68
BOOLSYMB (290) 69 74
CONCATSYMB (291) 19
INT (292) 110
FLOAT (293) 111
STRING (294) 112
BOOL (295) 115
ID (296) 1 22 23 27 28 54 55 61 62 77 80 81 82 83 84 85 113
FOR (297) 38
BREAK (298) 17
CONTINUE (299) 18
PRINTLN (300) 32
PRINT (301) 33
READ (302) 22
READLINE (303) 23


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
class (57)
    on left: 2 3, on right: 1 2
func_list (58)
    on left: 4 5, on right: 3 4
statement_list (59)
    on left: 6 7, on right: 6 51 59
statement (60)
    on left: 8 9 10 11 12 13 14 15 16, on right: 6 7 50
break_cont (61)
    on left: 17 18, on right: 16
concat (62)
    on left: 19, on right: 15
concat_args (63)
    on left: 20 21, on right: 19 20
read_statement (64)
    on left: 22 23, on right: 14
instruction (65)
    on left: 24 25 26, on right: 8 37 43 44 49
plusminus (66)
    on left: 27 28, on right: 26 41
compound_statement (67)
    on left: 29 30 31, on right: 9
println_statement (68)
    on left: 32 33, on right: 10
println_args (69)
    on left: 34 35, on right: 32 33 34
return_statement (70)
    on left: 36 37, on right: 13
for_statement (71)
    on left: 38, on right: 31
for_args (72)
    on left: 39 40 41 42, on right: 38
if_statement (73)
    on left: 43, on right: 29
while_statement (74)
    on left: 44, on right: 30
else_statement (75)
    on left: 45 46, on right: 43
elseif_statement_list (76)
    on left: 47 48, on right: 43 47
elseif_statement (77)
    on left: 49, on right: 47
cont_statement (78)
    on left: 50 51 52 53, on right: 38 43 44 45 49
func_def (79)
    on left: 54, on right: 4 5
func_call (80)
    on left: 55, on right: 12 114
call_list (81)
    on left: 56 57 58, on right: 55 56
cont_func (82)
    on left: 59 60, on right: 54
arg_list (83)
    on left: 61 62 63, on right: 54 61
symbols (84)
    on left: 64 65 66 67 68 69, on right: 54 61 62
declaration (85)
    on left: 70 71 72 73 74, on right: 2 11 40
dec_list (86)
    on left: 75 76, on right: 39 70 71 72 73 74 76
atr (87)
    on left: 77 78, on right: 75 76
atribution (88)
    on left: 79, on right: 25 78
atribution_list (89)
    on left: 80 81 82 83 84 85, on right: 79 80 81 82
expression (90)
    on left: 86 87 88 89 90 91 92, on right: 24 79 87 93 94 95 96 97
    98 99 100 101 102 103 104 105 106 107 108 109
exp_minus_plus (91)
    on left: 93 94, on right: 86
logic_exp_not (92)
    on left: 95, on right: 91
logic_exp_or_and (93)
    on left: 96 97, on right: 88
relac_exp (94)
    on left: 98 99 100 101 102 103, on right: 38 89
aritmetic_exp (95)
    on left: 104 105 106 107 108 109, on right: 90
type (96)
    on left: 110 111 112 113 114 115, on right: 20 21 34 35 56 57 92


state 0

    0 $accept: . program $end

    CLASSSYMB  shift, and go to state 1

    program  go to state 2


state 1

    1 program: CLASSSYMB . ID '{' class '}'

    ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: CLASSSYMB ID . '{' class '}'

    '{'  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: CLASSSYMB ID '{' . class '}'

    FUNCSYMB    shift, and go to state 6
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11

    class        go to state 12
    func_list    go to state 13
    func_def     go to state 14
    declaration  go to state 15


state 6

   54 func_def: FUNCSYMB . symbols ID '(' arg_list ')' cont_func

    INTSYMB     shift, and go to state 16
    FLOATSYMB   shift, and go to state 17
    STRINGSYMB  shift, and go to state 18
    DOUBLESYMB  shift, and go to state 19
    VOIDSYMB    shift, and go to state 20
    BOOLSYMB    shift, and go to state 21

    symbols  go to state 22


state 7

   70 declaration: INTSYMB . dec_list

    ID  shift, and go to state 23

    dec_list         go to state 24
    atr              go to state 25
    atribution       go to state 26
    atribution_list  go to state 27


state 8

   72 declaration: FLOATSYMB . dec_list

    ID  shift, and go to state 23

    dec_list         go to state 28
    atr              go to state 25
    atribution       go to state 26
    atribution_list  go to state 27


state 9

   73 declaration: STRINGSYMB . dec_list

    ID  shift, and go to state 23

    dec_list         go to state 29
    atr              go to state 25
    atribution       go to state 26
    atribution_list  go to state 27


state 10

   71 declaration: DOUBLESYMB . dec_list

    ID  shift, and go to state 23

    dec_list         go to state 30
    atr              go to state 25
    atribution       go to state 26
    atribution_list  go to state 27


state 11

   74 declaration: BOOLSYMB . dec_list

    ID  shift, and go to state 23

    dec_list         go to state 31
    atr              go to state 25
    atribution       go to state 26
    atribution_list  go to state 27


state 12

    1 program: CLASSSYMB ID '{' class . '}'

    '}'  shift, and go to state 32


state 13

    3 class: func_list .
    4 func_list: func_list . func_def

    FUNCSYMB  shift, and go to state 6

    $default  reduce using rule 3 (class)

    func_def  go to state 33


state 14

    5 func_list: func_def .

    $default  reduce using rule 5 (func_list)


state 15

    2 class: declaration . ';' class

    ';'  shift, and go to state 34


state 16

   64 symbols: INTSYMB .

    $default  reduce using rule 64 (symbols)


state 17

   66 symbols: FLOATSYMB .

    $default  reduce using rule 66 (symbols)


state 18

   67 symbols: STRINGSYMB .

    $default  reduce using rule 67 (symbols)


state 19

   65 symbols: DOUBLESYMB .

    $default  reduce using rule 65 (symbols)


state 20

   68 symbols: VOIDSYMB .

    $default  reduce using rule 68 (symbols)


state 21

   69 symbols: BOOLSYMB .

    $default  reduce using rule 69 (symbols)


state 22

   54 func_def: FUNCSYMB symbols . ID '(' arg_list ')' cont_func

    ID  shift, and go to state 35


state 23

   77 atr: ID .
   83 atribution_list: ID . EQUAL
   84                | ID . MINUSEQUAL
   85                | ID . PLUSEQUAL

    MINUSEQUAL  shift, and go to state 36
    PLUSEQUAL   shift, and go to state 37
    EQUAL       shift, and go to state 38

    $default  reduce using rule 77 (atr)


state 24

   70 declaration: INTSYMB dec_list .
   76 dec_list: dec_list . ',' atr

    ','  shift, and go to state 39

    $default  reduce using rule 70 (declaration)


state 25

   75 dec_list: atr .

    $default  reduce using rule 75 (dec_list)


state 26

   78 atr: atribution .

    $default  reduce using rule 78 (atr)


state 27

   79 atribution: atribution_list . expression
   80 atribution_list: atribution_list . ID EQUAL
   81                | atribution_list . ID PLUSEQUAL
   82                | atribution_list . ID MINUSEQUAL

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 48

    func_call         go to state 49
    expression        go to state 50
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 28

   72 declaration: FLOATSYMB dec_list .
   76 dec_list: dec_list . ',' atr

    ','  shift, and go to state 39

    $default  reduce using rule 72 (declaration)


state 29

   73 declaration: STRINGSYMB dec_list .
   76 dec_list: dec_list . ',' atr

    ','  shift, and go to state 39

    $default  reduce using rule 73 (declaration)


state 30

   71 declaration: DOUBLESYMB dec_list .
   76 dec_list: dec_list . ',' atr

    ','  shift, and go to state 39

    $default  reduce using rule 71 (declaration)


state 31

   74 declaration: BOOLSYMB dec_list .
   76 dec_list: dec_list . ',' atr

    ','  shift, and go to state 39

    $default  reduce using rule 74 (declaration)


state 32

    1 program: CLASSSYMB ID '{' class '}' .

    $default  reduce using rule 1 (program)


state 33

    4 func_list: func_list func_def .

    $default  reduce using rule 4 (func_list)


state 34

    2 class: declaration ';' . class

    FUNCSYMB    shift, and go to state 6
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11

    class        go to state 57
    func_list    go to state 13
    func_def     go to state 14
    declaration  go to state 15


state 35

   54 func_def: FUNCSYMB symbols ID . '(' arg_list ')' cont_func

    '('  shift, and go to state 58


state 36

   84 atribution_list: ID MINUSEQUAL .

    $default  reduce using rule 84 (atribution_list)


state 37

   85 atribution_list: ID PLUSEQUAL .

    $default  reduce using rule 85 (atribution_list)


state 38

   83 atribution_list: ID EQUAL .

    $default  reduce using rule 83 (atribution_list)


state 39

   76 dec_list: dec_list ',' . atr

    ID  shift, and go to state 23

    atr              go to state 59
    atribution       go to state 26
    atribution_list  go to state 27


state 40

   93 exp_minus_plus: MINUS . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 61
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 41

   94 exp_minus_plus: PLUS . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 62
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 42

   95 logic_exp_not: NOT . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 63
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 43

   87 expression: '(' . expression ')'

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 64
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 44

  110 type: INT .

    $default  reduce using rule 110 (type)


state 45

  111 type: FLOAT .

    $default  reduce using rule 111 (type)


state 46

  112 type: STRING .

    $default  reduce using rule 112 (type)


state 47

  115 type: BOOL .

    $default  reduce using rule 115 (type)


state 48

   55 func_call: ID . '(' call_list ')'
   80 atribution_list: atribution_list ID . EQUAL
   81                | atribution_list ID . PLUSEQUAL
   82                | atribution_list ID . MINUSEQUAL
  113 type: ID .

    MINUSEQUAL  shift, and go to state 65
    PLUSEQUAL   shift, and go to state 66
    EQUAL       shift, and go to state 67
    '('         shift, and go to state 68

    $default  reduce using rule 113 (type)


state 49

  114 type: func_call .

    $default  reduce using rule 114 (type)


state 50

   79 atribution: atribution_list expression .
   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    OR            shift, and go to state 69
    AND           shift, and go to state 70
    EQUALEQUAL    shift, and go to state 71
    NOTEQUAL      shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESS          shift, and go to state 75
    GREATER       shift, and go to state 76
    MINUS         shift, and go to state 77
    PLUS          shift, and go to state 78
    DIV           shift, and go to state 79
    MULT          shift, and go to state 80
    MOD           shift, and go to state 81
    POT           shift, and go to state 82

    $default  reduce using rule 79 (atribution)


state 51

   86 expression: exp_minus_plus .

    $default  reduce using rule 86 (expression)


state 52

   91 expression: logic_exp_not .

    $default  reduce using rule 91 (expression)


state 53

   88 expression: logic_exp_or_and .

    $default  reduce using rule 88 (expression)


state 54

   89 expression: relac_exp .

    $default  reduce using rule 89 (expression)


state 55

   90 expression: aritmetic_exp .

    $default  reduce using rule 90 (expression)


state 56

   92 expression: type .

    $default  reduce using rule 92 (expression)


state 57

    2 class: declaration ';' class .

    $default  reduce using rule 2 (class)


state 58

   54 func_def: FUNCSYMB symbols ID '(' . arg_list ')' cont_func

    INTSYMB     shift, and go to state 16
    FLOATSYMB   shift, and go to state 17
    STRINGSYMB  shift, and go to state 18
    DOUBLESYMB  shift, and go to state 19
    VOIDSYMB    shift, and go to state 20
    BOOLSYMB    shift, and go to state 21

    $default  reduce using rule 63 (arg_list)

    arg_list  go to state 83
    symbols   go to state 84


state 59

   76 dec_list: dec_list ',' atr .

    $default  reduce using rule 76 (dec_list)


state 60

   55 func_call: ID . '(' call_list ')'
  113 type: ID .

    '('  shift, and go to state 68

    $default  reduce using rule 113 (type)


state 61

   93 exp_minus_plus: MINUS expression .
   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    DIV   shift, and go to state 79
    MULT  shift, and go to state 80
    MOD   shift, and go to state 81
    POT   shift, and go to state 82

    $default  reduce using rule 93 (exp_minus_plus)


state 62

   94 exp_minus_plus: PLUS expression .
   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    DIV   shift, and go to state 79
    MULT  shift, and go to state 80
    MOD   shift, and go to state 81
    POT   shift, and go to state 82

    $default  reduce using rule 94 (exp_minus_plus)


state 63

   95 logic_exp_not: NOT expression .
   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    $default  reduce using rule 95 (logic_exp_not)


state 64

   87 expression: '(' expression . ')'
   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    OR            shift, and go to state 69
    AND           shift, and go to state 70
    EQUALEQUAL    shift, and go to state 71
    NOTEQUAL      shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESS          shift, and go to state 75
    GREATER       shift, and go to state 76
    MINUS         shift, and go to state 77
    PLUS          shift, and go to state 78
    DIV           shift, and go to state 79
    MULT          shift, and go to state 80
    MOD           shift, and go to state 81
    POT           shift, and go to state 82
    ')'           shift, and go to state 85


state 65

   82 atribution_list: atribution_list ID MINUSEQUAL .

    $default  reduce using rule 82 (atribution_list)


state 66

   81 atribution_list: atribution_list ID PLUSEQUAL .

    $default  reduce using rule 81 (atribution_list)


state 67

   80 atribution_list: atribution_list ID EQUAL .

    $default  reduce using rule 80 (atribution_list)


state 68

   55 func_call: ID '(' . call_list ')'

    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    $default  reduce using rule 58 (call_list)

    func_call  go to state 49
    call_list  go to state 86
    type       go to state 87


state 69

   97 logic_exp_or_and: expression OR . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 88
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 70

   96 logic_exp_or_and: expression AND . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 89
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 71

   98 relac_exp: expression EQUALEQUAL . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 90
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 72

   99 relac_exp: expression NOTEQUAL . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 91
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 73

  101 relac_exp: expression LESSEQUAL . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 92
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 74

  100 relac_exp: expression GREATEREQUAL . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 93
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 75

  102 relac_exp: expression LESS . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 94
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 76

  103 relac_exp: expression GREATER . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 95
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 77

  105 aritmetic_exp: expression MINUS . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 96
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 78

  104 aritmetic_exp: expression PLUS . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 97
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 79

  107 aritmetic_exp: expression DIV . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 98
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 80

  106 aritmetic_exp: expression MULT . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 99
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 81

  108 aritmetic_exp: expression MOD . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 100
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 82

  109 aritmetic_exp: expression POT . expression

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 101
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 83

   54 func_def: FUNCSYMB symbols ID '(' arg_list . ')' cont_func
   61 arg_list: arg_list . ',' symbols ID

    ')'  shift, and go to state 102
    ','  shift, and go to state 103


state 84

   62 arg_list: symbols . ID

    ID  shift, and go to state 104


state 85

   87 expression: '(' expression ')' .

    $default  reduce using rule 87 (expression)


state 86

   55 func_call: ID '(' call_list . ')'
   56 call_list: call_list . ',' type

    ')'  shift, and go to state 105
    ','  shift, and go to state 106


state 87

   57 call_list: type .

    $default  reduce using rule 57 (call_list)


state 88

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   97                 | expression OR expression .
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80
    MOD    shift, and go to state 81
    POT    shift, and go to state 82

    $default  reduce using rule 97 (logic_exp_or_and)


state 89

   96 logic_exp_or_and: expression . AND expression
   96                 | expression AND expression .
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80
    MOD    shift, and go to state 81
    POT    shift, and go to state 82

    $default  reduce using rule 96 (logic_exp_or_and)


state 90

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   98          | expression EQUALEQUAL expression .
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80
    MOD    shift, and go to state 81
    POT    shift, and go to state 82

    $default  reduce using rule 98 (relac_exp)


state 91

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
   99          | expression NOTEQUAL expression .
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80
    MOD    shift, and go to state 81
    POT    shift, and go to state 82

    $default  reduce using rule 99 (relac_exp)


state 92

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  101          | expression LESSEQUAL expression .
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80
    MOD    shift, and go to state 81
    POT    shift, and go to state 82

    $default  reduce using rule 101 (relac_exp)


state 93

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  100          | expression GREATEREQUAL expression .
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80
    MOD    shift, and go to state 81
    POT    shift, and go to state 82

    $default  reduce using rule 100 (relac_exp)


state 94

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  102          | expression LESS expression .
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80
    MOD    shift, and go to state 81
    POT    shift, and go to state 82

    $default  reduce using rule 102 (relac_exp)


state 95

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  103          | expression GREATER expression .
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    MINUS  shift, and go to state 77
    PLUS   shift, and go to state 78
    DIV    shift, and go to state 79
    MULT   shift, and go to state 80
    MOD    shift, and go to state 81
    POT    shift, and go to state 82

    $default  reduce using rule 103 (relac_exp)


state 96

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  105              | expression MINUS expression .
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    DIV   shift, and go to state 79
    MULT  shift, and go to state 80
    MOD   shift, and go to state 81
    POT   shift, and go to state 82

    $default  reduce using rule 105 (aritmetic_exp)


state 97

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  104              | expression PLUS expression .
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    DIV   shift, and go to state 79
    MULT  shift, and go to state 80
    MOD   shift, and go to state 81
    POT   shift, and go to state 82

    $default  reduce using rule 104 (aritmetic_exp)


state 98

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  107              | expression DIV expression .
  108              | expression . MOD expression
  109              | expression . POT expression

    MOD  shift, and go to state 81
    POT  shift, and go to state 82

    $default  reduce using rule 107 (aritmetic_exp)


state 99

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  106              | expression MULT expression .
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    MOD  shift, and go to state 81
    POT  shift, and go to state 82

    $default  reduce using rule 106 (aritmetic_exp)


state 100

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  108              | expression MOD expression .
  109              | expression . POT expression

    $default  reduce using rule 108 (aritmetic_exp)


state 101

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression
  109              | expression POT expression .

    $default  reduce using rule 109 (aritmetic_exp)


state 102

   54 func_def: FUNCSYMB symbols ID '(' arg_list ')' . cont_func

    '{'  shift, and go to state 107

    cont_func  go to state 108


state 103

   61 arg_list: arg_list ',' . symbols ID

    INTSYMB     shift, and go to state 16
    FLOATSYMB   shift, and go to state 17
    STRINGSYMB  shift, and go to state 18
    DOUBLESYMB  shift, and go to state 19
    VOIDSYMB    shift, and go to state 20
    BOOLSYMB    shift, and go to state 21

    symbols  go to state 109


state 104

   62 arg_list: symbols ID .

    $default  reduce using rule 62 (arg_list)


state 105

   55 func_call: ID '(' call_list ')' .

    $default  reduce using rule 55 (func_call)


state 106

   56 call_list: call_list ',' . type

    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call  go to state 49
    type       go to state 110


state 107

   59 cont_func: '{' . statement_list '}'
   60          | '{' . '}'

    MINUS       shift, and go to state 40
    PLUS        shift, and go to state 41
    RETURNSYMB  shift, and go to state 111
    WHILE       shift, and go to state 112
    IF          shift, and go to state 113
    NOT         shift, and go to state 42
    '('         shift, and go to state 43
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    CONCATSYMB  shift, and go to state 114
    INT         shift, and go to state 44
    FLOAT       shift, and go to state 45
    STRING      shift, and go to state 46
    BOOL        shift, and go to state 47
    ID          shift, and go to state 115
    FOR         shift, and go to state 116
    BREAK       shift, and go to state 117
    CONTINUE    shift, and go to state 118
    PRINTLN     shift, and go to state 119
    PRINT       shift, and go to state 120
    READ        shift, and go to state 121
    READLINE    shift, and go to state 122
    '}'         shift, and go to state 123

    statement_list      go to state 124
    statement           go to state 125
    break_cont          go to state 126
    concat              go to state 127
    read_statement      go to state 128
    instruction         go to state 129
    plusminus           go to state 130
    compound_statement  go to state 131
    println_statement   go to state 132
    return_statement    go to state 133
    for_statement       go to state 134
    if_statement        go to state 135
    while_statement     go to state 136
    func_call           go to state 137
    declaration         go to state 138
    atribution          go to state 139
    atribution_list     go to state 27
    expression          go to state 140
    exp_minus_plus      go to state 51
    logic_exp_not       go to state 52
    logic_exp_or_and    go to state 53
    relac_exp           go to state 54
    aritmetic_exp       go to state 55
    type                go to state 56


state 108

   54 func_def: FUNCSYMB symbols ID '(' arg_list ')' cont_func .

    $default  reduce using rule 54 (func_def)


state 109

   61 arg_list: arg_list ',' symbols . ID

    ID  shift, and go to state 141


state 110

   56 call_list: call_list ',' type .

    $default  reduce using rule 56 (call_list)


state 111

   36 return_statement: RETURNSYMB .
   37                 | RETURNSYMB . instruction

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 115

    $default  reduce using rule 36 (return_statement)

    instruction       go to state 142
    plusminus         go to state 130
    func_call         go to state 49
    atribution        go to state 139
    atribution_list   go to state 27
    expression        go to state 140
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 112

   44 while_statement: WHILE . '(' instruction ')' cont_statement

    '('  shift, and go to state 143


state 113

   43 if_statement: IF . '(' instruction ')' cont_statement elseif_statement_list else_statement

    '('  shift, and go to state 144


state 114

   19 concat: CONCATSYMB . '(' concat_args ')'

    '('  shift, and go to state 145


state 115

   27 plusminus: ID . PLUSPLUS
   28          | ID . MINUSMINUS
   55 func_call: ID . '(' call_list ')'
   83 atribution_list: ID . EQUAL
   84                | ID . MINUSEQUAL
   85                | ID . PLUSEQUAL
  113 type: ID .

    MINUSEQUAL  shift, and go to state 36
    PLUSEQUAL   shift, and go to state 37
    EQUAL       shift, and go to state 38
    MINUSMINUS  shift, and go to state 146
    PLUSPLUS    shift, and go to state 147
    '('         shift, and go to state 68

    $default  reduce using rule 113 (type)


state 116

   38 for_statement: FOR . '(' for_args ';' relac_exp ';' for_args ')' cont_statement

    '('  shift, and go to state 148


state 117

   17 break_cont: BREAK .

    $default  reduce using rule 17 (break_cont)


state 118

   18 break_cont: CONTINUE .

    $default  reduce using rule 18 (break_cont)


state 119

   32 println_statement: PRINTLN . '(' println_args ')'

    '('  shift, and go to state 149


state 120

   33 println_statement: PRINT . '(' println_args ')'

    '('  shift, and go to state 150


state 121

   22 read_statement: READ . '(' ID ')'

    '('  shift, and go to state 151


state 122

   23 read_statement: READLINE . '(' ID ')'

    '('  shift, and go to state 152


state 123

   60 cont_func: '{' '}' .

    $default  reduce using rule 60 (cont_func)


state 124

    6 statement_list: statement_list . statement
   59 cont_func: '{' statement_list . '}'

    MINUS       shift, and go to state 40
    PLUS        shift, and go to state 41
    RETURNSYMB  shift, and go to state 111
    WHILE       shift, and go to state 112
    IF          shift, and go to state 113
    NOT         shift, and go to state 42
    '('         shift, and go to state 43
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    CONCATSYMB  shift, and go to state 114
    INT         shift, and go to state 44
    FLOAT       shift, and go to state 45
    STRING      shift, and go to state 46
    BOOL        shift, and go to state 47
    ID          shift, and go to state 115
    FOR         shift, and go to state 116
    BREAK       shift, and go to state 117
    CONTINUE    shift, and go to state 118
    PRINTLN     shift, and go to state 119
    PRINT       shift, and go to state 120
    READ        shift, and go to state 121
    READLINE    shift, and go to state 122
    '}'         shift, and go to state 153

    statement           go to state 154
    break_cont          go to state 126
    concat              go to state 127
    read_statement      go to state 128
    instruction         go to state 129
    plusminus           go to state 130
    compound_statement  go to state 131
    println_statement   go to state 132
    return_statement    go to state 133
    for_statement       go to state 134
    if_statement        go to state 135
    while_statement     go to state 136
    func_call           go to state 137
    declaration         go to state 138
    atribution          go to state 139
    atribution_list     go to state 27
    expression          go to state 140
    exp_minus_plus      go to state 51
    logic_exp_not       go to state 52
    logic_exp_or_and    go to state 53
    relac_exp           go to state 54
    aritmetic_exp       go to state 55
    type                go to state 56


state 125

    7 statement_list: statement .

    $default  reduce using rule 7 (statement_list)


state 126

   16 statement: break_cont . ';'

    ';'  shift, and go to state 155


state 127

   15 statement: concat . ';'

    ';'  shift, and go to state 156


state 128

   14 statement: read_statement . ';'

    ';'  shift, and go to state 157


state 129

    8 statement: instruction . ';'

    ';'  shift, and go to state 158


state 130

   26 instruction: plusminus .

    $default  reduce using rule 26 (instruction)


state 131

    9 statement: compound_statement .

    $default  reduce using rule 9 (statement)


state 132

   10 statement: println_statement . ';'

    ';'  shift, and go to state 159


state 133

   13 statement: return_statement . ';'

    ';'  shift, and go to state 160


state 134

   31 compound_statement: for_statement .

    $default  reduce using rule 31 (compound_statement)


state 135

   29 compound_statement: if_statement .

    $default  reduce using rule 29 (compound_statement)


state 136

   30 compound_statement: while_statement .

    $default  reduce using rule 30 (compound_statement)


state 137

   12 statement: func_call . ';'
  114 type: func_call .

    ';'  shift, and go to state 161

    ';'       [reduce using rule 114 (type)]
    $default  reduce using rule 114 (type)


state 138

   11 statement: declaration . ';'

    ';'  shift, and go to state 162


state 139

   25 instruction: atribution .

    $default  reduce using rule 25 (instruction)


state 140

   24 instruction: expression .
   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    OR            shift, and go to state 69
    AND           shift, and go to state 70
    EQUALEQUAL    shift, and go to state 71
    NOTEQUAL      shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESS          shift, and go to state 75
    GREATER       shift, and go to state 76
    MINUS         shift, and go to state 77
    PLUS          shift, and go to state 78
    DIV           shift, and go to state 79
    MULT          shift, and go to state 80
    MOD           shift, and go to state 81
    POT           shift, and go to state 82

    $default  reduce using rule 24 (instruction)


state 141

   61 arg_list: arg_list ',' symbols ID .

    $default  reduce using rule 61 (arg_list)


state 142

   37 return_statement: RETURNSYMB instruction .

    $default  reduce using rule 37 (return_statement)


state 143

   44 while_statement: WHILE '(' . instruction ')' cont_statement

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 115

    instruction       go to state 163
    plusminus         go to state 130
    func_call         go to state 49
    atribution        go to state 139
    atribution_list   go to state 27
    expression        go to state 140
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 144

   43 if_statement: IF '(' . instruction ')' cont_statement elseif_statement_list else_statement

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 115

    instruction       go to state 164
    plusminus         go to state 130
    func_call         go to state 49
    atribution        go to state 139
    atribution_list   go to state 27
    expression        go to state 140
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 145

   19 concat: CONCATSYMB '(' . concat_args ')'

    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    concat_args  go to state 165
    func_call    go to state 49
    type         go to state 166


state 146

   28 plusminus: ID MINUSMINUS .

    $default  reduce using rule 28 (plusminus)


state 147

   27 plusminus: ID PLUSPLUS .

    $default  reduce using rule 27 (plusminus)


state 148

   38 for_statement: FOR '(' . for_args ';' relac_exp ';' for_args ')' cont_statement

    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    ID          shift, and go to state 167

    $default  reduce using rule 42 (for_args)

    plusminus        go to state 168
    for_args         go to state 169
    declaration      go to state 170
    dec_list         go to state 171
    atr              go to state 25
    atribution       go to state 26
    atribution_list  go to state 27


state 149

   32 println_statement: PRINTLN '(' . println_args ')'

    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    println_args  go to state 172
    func_call     go to state 49
    type          go to state 173


state 150

   33 println_statement: PRINT '(' . println_args ')'

    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    println_args  go to state 174
    func_call     go to state 49
    type          go to state 173


state 151

   22 read_statement: READ '(' . ID ')'

    ID  shift, and go to state 175


state 152

   23 read_statement: READLINE '(' . ID ')'

    ID  shift, and go to state 176


state 153

   59 cont_func: '{' statement_list '}' .

    $default  reduce using rule 59 (cont_func)


state 154

    6 statement_list: statement_list statement .

    $default  reduce using rule 6 (statement_list)


state 155

   16 statement: break_cont ';' .

    $default  reduce using rule 16 (statement)


state 156

   15 statement: concat ';' .

    $default  reduce using rule 15 (statement)


state 157

   14 statement: read_statement ';' .

    $default  reduce using rule 14 (statement)


state 158

    8 statement: instruction ';' .

    $default  reduce using rule 8 (statement)


state 159

   10 statement: println_statement ';' .

    $default  reduce using rule 10 (statement)


state 160

   13 statement: return_statement ';' .

    $default  reduce using rule 13 (statement)


state 161

   12 statement: func_call ';' .

    $default  reduce using rule 12 (statement)


state 162

   11 statement: declaration ';' .

    $default  reduce using rule 11 (statement)


state 163

   44 while_statement: WHILE '(' instruction . ')' cont_statement

    ')'  shift, and go to state 177


state 164

   43 if_statement: IF '(' instruction . ')' cont_statement elseif_statement_list else_statement

    ')'  shift, and go to state 178


state 165

   19 concat: CONCATSYMB '(' concat_args . ')'

    ')'  shift, and go to state 179


state 166

   20 concat_args: type . ',' concat_args
   21            | type . ',' type

    ','  shift, and go to state 180


state 167

   27 plusminus: ID . PLUSPLUS
   28          | ID . MINUSMINUS
   77 atr: ID .
   83 atribution_list: ID . EQUAL
   84                | ID . MINUSEQUAL
   85                | ID . PLUSEQUAL

    MINUSEQUAL  shift, and go to state 36
    PLUSEQUAL   shift, and go to state 37
    EQUAL       shift, and go to state 38
    MINUSMINUS  shift, and go to state 146
    PLUSPLUS    shift, and go to state 147

    $default  reduce using rule 77 (atr)


state 168

   41 for_args: plusminus .

    $default  reduce using rule 41 (for_args)


state 169

   38 for_statement: FOR '(' for_args . ';' relac_exp ';' for_args ')' cont_statement

    ';'  shift, and go to state 181


state 170

   40 for_args: declaration .

    $default  reduce using rule 40 (for_args)


state 171

   39 for_args: dec_list .
   76 dec_list: dec_list . ',' atr

    ','  shift, and go to state 39

    $default  reduce using rule 39 (for_args)


state 172

   32 println_statement: PRINTLN '(' println_args . ')'

    ')'  shift, and go to state 182


state 173

   34 println_args: type . PLUS println_args
   35             | type .

    PLUS  shift, and go to state 183

    $default  reduce using rule 35 (println_args)


state 174

   33 println_statement: PRINT '(' println_args . ')'

    ')'  shift, and go to state 184


state 175

   22 read_statement: READ '(' ID . ')'

    ')'  shift, and go to state 185


state 176

   23 read_statement: READLINE '(' ID . ')'

    ')'  shift, and go to state 186


state 177

   44 while_statement: WHILE '(' instruction ')' . cont_statement

    MINUS       shift, and go to state 40
    PLUS        shift, and go to state 41
    RETURNSYMB  shift, and go to state 111
    WHILE       shift, and go to state 112
    IF          shift, and go to state 113
    NOT         shift, and go to state 42
    '('         shift, and go to state 43
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    CONCATSYMB  shift, and go to state 114
    INT         shift, and go to state 44
    FLOAT       shift, and go to state 45
    STRING      shift, and go to state 46
    BOOL        shift, and go to state 47
    ID          shift, and go to state 115
    FOR         shift, and go to state 116
    BREAK       shift, and go to state 117
    CONTINUE    shift, and go to state 118
    PRINTLN     shift, and go to state 119
    PRINT       shift, and go to state 120
    READ        shift, and go to state 121
    READLINE    shift, and go to state 122
    '{'         shift, and go to state 187
    ';'         shift, and go to state 188

    statement           go to state 189
    break_cont          go to state 126
    concat              go to state 127
    read_statement      go to state 128
    instruction         go to state 129
    plusminus           go to state 130
    compound_statement  go to state 131
    println_statement   go to state 132
    return_statement    go to state 133
    for_statement       go to state 134
    if_statement        go to state 135
    while_statement     go to state 136
    cont_statement      go to state 190
    func_call           go to state 137
    declaration         go to state 138
    atribution          go to state 139
    atribution_list     go to state 27
    expression          go to state 140
    exp_minus_plus      go to state 51
    logic_exp_not       go to state 52
    logic_exp_or_and    go to state 53
    relac_exp           go to state 54
    aritmetic_exp       go to state 55
    type                go to state 56


state 178

   43 if_statement: IF '(' instruction ')' . cont_statement elseif_statement_list else_statement

    MINUS       shift, and go to state 40
    PLUS        shift, and go to state 41
    RETURNSYMB  shift, and go to state 111
    WHILE       shift, and go to state 112
    IF          shift, and go to state 113
    NOT         shift, and go to state 42
    '('         shift, and go to state 43
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    CONCATSYMB  shift, and go to state 114
    INT         shift, and go to state 44
    FLOAT       shift, and go to state 45
    STRING      shift, and go to state 46
    BOOL        shift, and go to state 47
    ID          shift, and go to state 115
    FOR         shift, and go to state 116
    BREAK       shift, and go to state 117
    CONTINUE    shift, and go to state 118
    PRINTLN     shift, and go to state 119
    PRINT       shift, and go to state 120
    READ        shift, and go to state 121
    READLINE    shift, and go to state 122
    '{'         shift, and go to state 187
    ';'         shift, and go to state 188

    statement           go to state 189
    break_cont          go to state 126
    concat              go to state 127
    read_statement      go to state 128
    instruction         go to state 129
    plusminus           go to state 130
    compound_statement  go to state 131
    println_statement   go to state 132
    return_statement    go to state 133
    for_statement       go to state 134
    if_statement        go to state 135
    while_statement     go to state 136
    cont_statement      go to state 191
    func_call           go to state 137
    declaration         go to state 138
    atribution          go to state 139
    atribution_list     go to state 27
    expression          go to state 140
    exp_minus_plus      go to state 51
    logic_exp_not       go to state 52
    logic_exp_or_and    go to state 53
    relac_exp           go to state 54
    aritmetic_exp       go to state 55
    type                go to state 56


state 179

   19 concat: CONCATSYMB '(' concat_args ')' .

    $default  reduce using rule 19 (concat)


state 180

   20 concat_args: type ',' . concat_args
   21            | type ',' . type

    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    concat_args  go to state 192
    func_call    go to state 49
    type         go to state 193


state 181

   38 for_statement: FOR '(' for_args ';' . relac_exp ';' for_args ')' cont_statement

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    func_call         go to state 49
    expression        go to state 194
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 195
    aritmetic_exp     go to state 55
    type              go to state 56


state 182

   32 println_statement: PRINTLN '(' println_args ')' .

    $default  reduce using rule 32 (println_statement)


state 183

   34 println_args: type PLUS . println_args

    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 60

    println_args  go to state 196
    func_call     go to state 49
    type          go to state 173


state 184

   33 println_statement: PRINT '(' println_args ')' .

    $default  reduce using rule 33 (println_statement)


state 185

   22 read_statement: READ '(' ID ')' .

    $default  reduce using rule 22 (read_statement)


state 186

   23 read_statement: READLINE '(' ID ')' .

    $default  reduce using rule 23 (read_statement)


state 187

   51 cont_statement: '{' . statement_list '}'
   52               | '{' . '}'

    MINUS       shift, and go to state 40
    PLUS        shift, and go to state 41
    RETURNSYMB  shift, and go to state 111
    WHILE       shift, and go to state 112
    IF          shift, and go to state 113
    NOT         shift, and go to state 42
    '('         shift, and go to state 43
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    CONCATSYMB  shift, and go to state 114
    INT         shift, and go to state 44
    FLOAT       shift, and go to state 45
    STRING      shift, and go to state 46
    BOOL        shift, and go to state 47
    ID          shift, and go to state 115
    FOR         shift, and go to state 116
    BREAK       shift, and go to state 117
    CONTINUE    shift, and go to state 118
    PRINTLN     shift, and go to state 119
    PRINT       shift, and go to state 120
    READ        shift, and go to state 121
    READLINE    shift, and go to state 122
    '}'         shift, and go to state 197

    statement_list      go to state 198
    statement           go to state 125
    break_cont          go to state 126
    concat              go to state 127
    read_statement      go to state 128
    instruction         go to state 129
    plusminus           go to state 130
    compound_statement  go to state 131
    println_statement   go to state 132
    return_statement    go to state 133
    for_statement       go to state 134
    if_statement        go to state 135
    while_statement     go to state 136
    func_call           go to state 137
    declaration         go to state 138
    atribution          go to state 139
    atribution_list     go to state 27
    expression          go to state 140
    exp_minus_plus      go to state 51
    logic_exp_not       go to state 52
    logic_exp_or_and    go to state 53
    relac_exp           go to state 54
    aritmetic_exp       go to state 55
    type                go to state 56


state 188

   53 cont_statement: ';' .

    $default  reduce using rule 53 (cont_statement)


state 189

   50 cont_statement: statement .

    $default  reduce using rule 50 (cont_statement)


state 190

   44 while_statement: WHILE '(' instruction ')' cont_statement .

    $default  reduce using rule 44 (while_statement)


state 191

   43 if_statement: IF '(' instruction ')' cont_statement . elseif_statement_list else_statement

    $default  reduce using rule 48 (elseif_statement_list)

    elseif_statement_list  go to state 199


state 192

   20 concat_args: type ',' concat_args .

    $default  reduce using rule 20 (concat_args)


state 193

   20 concat_args: type . ',' concat_args
   21            | type . ',' type
   21            | type ',' type .

    ','  shift, and go to state 180

    $default  reduce using rule 21 (concat_args)


state 194

   96 logic_exp_or_and: expression . AND expression
   97                 | expression . OR expression
   98 relac_exp: expression . EQUALEQUAL expression
   99          | expression . NOTEQUAL expression
  100          | expression . GREATEREQUAL expression
  101          | expression . LESSEQUAL expression
  102          | expression . LESS expression
  103          | expression . GREATER expression
  104 aritmetic_exp: expression . PLUS expression
  105              | expression . MINUS expression
  106              | expression . MULT expression
  107              | expression . DIV expression
  108              | expression . MOD expression
  109              | expression . POT expression

    OR            shift, and go to state 69
    AND           shift, and go to state 70
    EQUALEQUAL    shift, and go to state 71
    NOTEQUAL      shift, and go to state 72
    LESSEQUAL     shift, and go to state 73
    GREATEREQUAL  shift, and go to state 74
    LESS          shift, and go to state 75
    GREATER       shift, and go to state 76
    MINUS         shift, and go to state 77
    PLUS          shift, and go to state 78
    DIV           shift, and go to state 79
    MULT          shift, and go to state 80
    MOD           shift, and go to state 81
    POT           shift, and go to state 82


state 195

   38 for_statement: FOR '(' for_args ';' relac_exp . ';' for_args ')' cont_statement
   89 expression: relac_exp .

    ';'  shift, and go to state 200

    $default  reduce using rule 89 (expression)


state 196

   34 println_args: type PLUS println_args .

    $default  reduce using rule 34 (println_args)


state 197

   52 cont_statement: '{' '}' .

    $default  reduce using rule 52 (cont_statement)


state 198

    6 statement_list: statement_list . statement
   51 cont_statement: '{' statement_list . '}'

    MINUS       shift, and go to state 40
    PLUS        shift, and go to state 41
    RETURNSYMB  shift, and go to state 111
    WHILE       shift, and go to state 112
    IF          shift, and go to state 113
    NOT         shift, and go to state 42
    '('         shift, and go to state 43
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    CONCATSYMB  shift, and go to state 114
    INT         shift, and go to state 44
    FLOAT       shift, and go to state 45
    STRING      shift, and go to state 46
    BOOL        shift, and go to state 47
    ID          shift, and go to state 115
    FOR         shift, and go to state 116
    BREAK       shift, and go to state 117
    CONTINUE    shift, and go to state 118
    PRINTLN     shift, and go to state 119
    PRINT       shift, and go to state 120
    READ        shift, and go to state 121
    READLINE    shift, and go to state 122
    '}'         shift, and go to state 201

    statement           go to state 154
    break_cont          go to state 126
    concat              go to state 127
    read_statement      go to state 128
    instruction         go to state 129
    plusminus           go to state 130
    compound_statement  go to state 131
    println_statement   go to state 132
    return_statement    go to state 133
    for_statement       go to state 134
    if_statement        go to state 135
    while_statement     go to state 136
    func_call           go to state 137
    declaration         go to state 138
    atribution          go to state 139
    atribution_list     go to state 27
    expression          go to state 140
    exp_minus_plus      go to state 51
    logic_exp_not       go to state 52
    logic_exp_or_and    go to state 53
    relac_exp           go to state 54
    aritmetic_exp       go to state 55
    type                go to state 56


state 199

   43 if_statement: IF '(' instruction ')' cont_statement elseif_statement_list . else_statement
   47 elseif_statement_list: elseif_statement_list . elseif_statement

    ELSEIF  shift, and go to state 202
    ELSE    shift, and go to state 203

    ELSEIF    [reduce using rule 46 (else_statement)]
    ELSE      [reduce using rule 46 (else_statement)]
    $default  reduce using rule 46 (else_statement)

    else_statement    go to state 204
    elseif_statement  go to state 205


state 200

   38 for_statement: FOR '(' for_args ';' relac_exp ';' . for_args ')' cont_statement

    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    ID          shift, and go to state 167

    $default  reduce using rule 42 (for_args)

    plusminus        go to state 168
    for_args         go to state 206
    declaration      go to state 170
    dec_list         go to state 171
    atr              go to state 25
    atribution       go to state 26
    atribution_list  go to state 27


state 201

   51 cont_statement: '{' statement_list '}' .

    $default  reduce using rule 51 (cont_statement)


state 202

   49 elseif_statement: ELSEIF . '(' instruction ')' cont_statement

    '('  shift, and go to state 207


state 203

   45 else_statement: ELSE . cont_statement

    MINUS       shift, and go to state 40
    PLUS        shift, and go to state 41
    RETURNSYMB  shift, and go to state 111
    WHILE       shift, and go to state 112
    IF          shift, and go to state 113
    NOT         shift, and go to state 42
    '('         shift, and go to state 43
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    CONCATSYMB  shift, and go to state 114
    INT         shift, and go to state 44
    FLOAT       shift, and go to state 45
    STRING      shift, and go to state 46
    BOOL        shift, and go to state 47
    ID          shift, and go to state 115
    FOR         shift, and go to state 116
    BREAK       shift, and go to state 117
    CONTINUE    shift, and go to state 118
    PRINTLN     shift, and go to state 119
    PRINT       shift, and go to state 120
    READ        shift, and go to state 121
    READLINE    shift, and go to state 122
    '{'         shift, and go to state 187
    ';'         shift, and go to state 188

    statement           go to state 189
    break_cont          go to state 126
    concat              go to state 127
    read_statement      go to state 128
    instruction         go to state 129
    plusminus           go to state 130
    compound_statement  go to state 131
    println_statement   go to state 132
    return_statement    go to state 133
    for_statement       go to state 134
    if_statement        go to state 135
    while_statement     go to state 136
    cont_statement      go to state 208
    func_call           go to state 137
    declaration         go to state 138
    atribution          go to state 139
    atribution_list     go to state 27
    expression          go to state 140
    exp_minus_plus      go to state 51
    logic_exp_not       go to state 52
    logic_exp_or_and    go to state 53
    relac_exp           go to state 54
    aritmetic_exp       go to state 55
    type                go to state 56


state 204

   43 if_statement: IF '(' instruction ')' cont_statement elseif_statement_list else_statement .

    $default  reduce using rule 43 (if_statement)


state 205

   47 elseif_statement_list: elseif_statement_list elseif_statement .

    $default  reduce using rule 47 (elseif_statement_list)


state 206

   38 for_statement: FOR '(' for_args ';' relac_exp ';' for_args . ')' cont_statement

    ')'  shift, and go to state 209


state 207

   49 elseif_statement: ELSEIF '(' . instruction ')' cont_statement

    MINUS   shift, and go to state 40
    PLUS    shift, and go to state 41
    NOT     shift, and go to state 42
    '('     shift, and go to state 43
    INT     shift, and go to state 44
    FLOAT   shift, and go to state 45
    STRING  shift, and go to state 46
    BOOL    shift, and go to state 47
    ID      shift, and go to state 115

    instruction       go to state 210
    plusminus         go to state 130
    func_call         go to state 49
    atribution        go to state 139
    atribution_list   go to state 27
    expression        go to state 140
    exp_minus_plus    go to state 51
    logic_exp_not     go to state 52
    logic_exp_or_and  go to state 53
    relac_exp         go to state 54
    aritmetic_exp     go to state 55
    type              go to state 56


state 208

   45 else_statement: ELSE cont_statement .

    $default  reduce using rule 45 (else_statement)


state 209

   38 for_statement: FOR '(' for_args ';' relac_exp ';' for_args ')' . cont_statement

    MINUS       shift, and go to state 40
    PLUS        shift, and go to state 41
    RETURNSYMB  shift, and go to state 111
    WHILE       shift, and go to state 112
    IF          shift, and go to state 113
    NOT         shift, and go to state 42
    '('         shift, and go to state 43
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    CONCATSYMB  shift, and go to state 114
    INT         shift, and go to state 44
    FLOAT       shift, and go to state 45
    STRING      shift, and go to state 46
    BOOL        shift, and go to state 47
    ID          shift, and go to state 115
    FOR         shift, and go to state 116
    BREAK       shift, and go to state 117
    CONTINUE    shift, and go to state 118
    PRINTLN     shift, and go to state 119
    PRINT       shift, and go to state 120
    READ        shift, and go to state 121
    READLINE    shift, and go to state 122
    '{'         shift, and go to state 187
    ';'         shift, and go to state 188

    statement           go to state 189
    break_cont          go to state 126
    concat              go to state 127
    read_statement      go to state 128
    instruction         go to state 129
    plusminus           go to state 130
    compound_statement  go to state 131
    println_statement   go to state 132
    return_statement    go to state 133
    for_statement       go to state 134
    if_statement        go to state 135
    while_statement     go to state 136
    cont_statement      go to state 211
    func_call           go to state 137
    declaration         go to state 138
    atribution          go to state 139
    atribution_list     go to state 27
    expression          go to state 140
    exp_minus_plus      go to state 51
    logic_exp_not       go to state 52
    logic_exp_or_and    go to state 53
    relac_exp           go to state 54
    aritmetic_exp       go to state 55
    type                go to state 56


state 210

   49 elseif_statement: ELSEIF '(' instruction . ')' cont_statement

    ')'  shift, and go to state 212


state 211

   38 for_statement: FOR '(' for_args ';' relac_exp ';' for_args ')' cont_statement .

    $default  reduce using rule 38 (for_statement)


state 212

   49 elseif_statement: ELSEIF '(' instruction ')' . cont_statement

    MINUS       shift, and go to state 40
    PLUS        shift, and go to state 41
    RETURNSYMB  shift, and go to state 111
    WHILE       shift, and go to state 112
    IF          shift, and go to state 113
    NOT         shift, and go to state 42
    '('         shift, and go to state 43
    INTSYMB     shift, and go to state 7
    FLOATSYMB   shift, and go to state 8
    STRINGSYMB  shift, and go to state 9
    DOUBLESYMB  shift, and go to state 10
    BOOLSYMB    shift, and go to state 11
    CONCATSYMB  shift, and go to state 114
    INT         shift, and go to state 44
    FLOAT       shift, and go to state 45
    STRING      shift, and go to state 46
    BOOL        shift, and go to state 47
    ID          shift, and go to state 115
    FOR         shift, and go to state 116
    BREAK       shift, and go to state 117
    CONTINUE    shift, and go to state 118
    PRINTLN     shift, and go to state 119
    PRINT       shift, and go to state 120
    READ        shift, and go to state 121
    READLINE    shift, and go to state 122
    '{'         shift, and go to state 187
    ';'         shift, and go to state 188

    statement           go to state 189
    break_cont          go to state 126
    concat              go to state 127
    read_statement      go to state 128
    instruction         go to state 129
    plusminus           go to state 130
    compound_statement  go to state 131
    println_statement   go to state 132
    return_statement    go to state 133
    for_statement       go to state 134
    if_statement        go to state 135
    while_statement     go to state 136
    cont_statement      go to state 213
    func_call           go to state 137
    declaration         go to state 138
    atribution          go to state 139
    atribution_list     go to state 27
    expression          go to state 140
    exp_minus_plus      go to state 51
    logic_exp_not       go to state 52
    logic_exp_or_and    go to state 53
    relac_exp           go to state 54
    aritmetic_exp       go to state 55
    type                go to state 56


state 213

   49 elseif_statement: ELSEIF '(' instruction ')' cont_statement .

    $default  reduce using rule 49 (elseif_statement)
